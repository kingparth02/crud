@model crud.Models.Emp

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Emp</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.id)

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(
                model => model.Department,
                new SelectList(new List<string> { "IT", "Computer", "HR" }),
                "Select Department",
                new { @class = "form-control" }
            )
            @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="form-check">
                <label class="form-check-label">
                    @Html.RadioButtonFor(model => model.Gender, "Male", new { @class = "form-check-input" }) Male
                </label>
            </div>
            <div class="form-check">
                <label class="form-check-label">
                    @Html.RadioButtonFor(model => model.Gender, "Female", new { @class = "form-check-input" }) Female
                </label>
            </div>
            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Hobby, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @{
                // Split the Hobby string into an array
                var selectedHobbies = Model.Hobby?.Split(new[] { ", " }, StringSplitOptions.RemoveEmptyEntries) ?? new string[] { };
            }
            <div class="form-check">
                <label class="form-check-label">
                    <input type="checkbox" name="Hobby" value="Cricket" class="form-check-input"
                           @(selectedHobbies.Contains("Cricket") ? "checked" : "") /> Cricket
                </label>
            </div>
            <div class="form-check">
                <label class="form-check-label">
                    <input type="checkbox" name="Hobby" value="Gaming" class="form-check-input"
                           @(selectedHobbies.Contains("Gaming") ? "checked" : "") /> Gaming
                </label>
            </div>
            <div class="form-check">
                <label class="form-check-label">
                    <input type="checkbox" name="Hobby" value="Movie" class="form-check-input"
                           @(selectedHobbies.Contains("Movie") ? "checked" : "") /> Movie
                </label>
            </div>
            @Html.ValidationMessageFor(model => model.Hobby, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.doj, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.doj, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.doj, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
